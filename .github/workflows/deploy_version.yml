# Copyright 2024 - 2025 Khalil Estell and the libhal contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 🚀 Deploy Version

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      compiler_profile_url:
        type: string
        required: true
      compiler_profile:
        type: string
        required: true
      profile:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: pipx install conan==2.16.1
      - name: 📡 Add `libhal` repo to conan remotes
        run: conan remote add libhal
          https://libhal.jfrog.io/artifactory/api/conan/trunk-conan

      - name: 📡 Create and setup default profile
        run: conan profile detect --force

      - name: 👁️‍🗨️ Show conan profile
        run: conan profile show

      - name: 📡 Install linux default profiles
        run: conan config install -sf profiles/x86_64/linux/ -tf profiles https://github.com/libhal/conan-config.git

      - name: 📡 Install libhal settings_user.yml
        run: conan config install -sf profiles/baremetal/v2 https://github.com/libhal/conan-config.git

      - name: 📡 Install compiler profiles
        run: conan config install -tf profiles -sf conan/profiles ${{ inputs.compiler_profile_url }}

      - name: Set Version Environment Variable
        run: |
          if [ -z "${{ inputs.version }}" ]; then
            echo "VERSION=latest" >> $GITHUB_ENV
          else
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          fi

      - name: 📦 Build package using ${{ inputs.profile }} @ Debug
        run: conan create . -pr ${{ inputs.profile }} -pr ${{ inputs.compiler_profile }} -s build_type=Debug --version=${{ env.VERSION }}

      - name: 📦 Build package using ${{ inputs.profile }} @ RelWithDebInfo
        run: conan create . -pr ${{ inputs.profile }} -pr ${{ inputs.compiler_profile }} -s build_type=RelWithDebInfo --version=${{ env.VERSION }}

      - name: 📦 Build package using ${{ inputs.profile }} @ Release
        run: conan create . -pr ${{ inputs.profile }} -pr ${{ inputs.compiler_profile }} -s build_type=Release --version=${{ env.VERSION }}

      - name: 📦 Build package using ${{ inputs.profile }} @ MinSizeRel
        run: conan create . -pr ${{ inputs.profile }} -pr ${{ inputs.compiler_profile }} -s build_type=MinSizeRel --version=${{ env.VERSION }}

      - name: 🏗️ Build demos for ${{ inputs.profile }} @ MinSizeRel
        run: conan build demos -pr ${{ inputs.profile }} -pr ${{ inputs.compiler_profile }} -s build_type=Release --version=${{ env.VERSION }}

      - name: 📡 Sign into JFrog Artifactory
        if: ${{ inputs.version != '' }}
        env:
          PASSWORD: ${{ secrets.JFROG_LIBHAL_TRUNK_ID_TOKEN }}
          JFROG_USER: ${{ secrets.JFROG_LIBHAL_TRUNK_ID_TOKEN_USER }}
        run: conan remote login -p $PASSWORD libhal $JFROG_USER

      - name: 🆙 Upload package version ${{ inputs.version }} to `libhal` repo
        if: ${{ inputs.version != '' }}
        run: conan upload "libhal-micromod/${{ inputs.version }}" --confirm -r=libhal
